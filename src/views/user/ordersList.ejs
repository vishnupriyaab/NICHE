<%- include('include/_header') %>



  <div class="flex-grow" style="margin-top: 120px;">
    <div class="container mx-auto my-8 p-8 bg-white rounded shadow">
      <!-- Back button -->
      <a href="#" onclick="goBack()"
        class="inline-flex items-center mb-2 px-4 py-2 text-base font-medium rounded-md text-gray-500 hover:text-gray-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-gray-500 mr-auto">
        <svg class="h-4 w-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24"
          xmlns="http://www.w3.org/2000/svg">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 19l-7-7m0 0l7-7m-7 7h18"></path>
        </svg>
        Back
      </a>
      <h1 class="text-2xl font-bold mb-4">Your Orders</h1>

      <div class="overflow-x-auto">
        <table class="w-full bg-white border border-gray-300">
         
          <tbody>
            <!-- Replace the following block with your actual order data -->
            <% for (let i=0; i < orders.length; i++) { %>

              <tr class="hover:bg-gray-100">
                <td>
                  <%= i+1 %>
                </td>
                <td class="py-2 px-4 border-b cursor-pointer"
                  onclick="location.href = '/orderinformation/<%= orders[i].orderDetails._id %>'">
                  <img src="<%= orders[i].orderDetails.pImage %>" alt="Product Image"
                    class="h-16 w-16 object-cover rounded" />
                </td>
                <td class="py-2 px-4 border-b cursor-pointer"
                  onclick="location.href = '/orderinformation/<%= orders[i].orderDetails._id %>'">
                  <%= orders[i].orderDetails.pName %>
                </td>
                <td class="py-2 px-4 border-b"
                  onclick="location.href = '/orderinformation/<%= orders[i].orderDetails._id %>'">
                  Order Date: <%=
                    orders[i].orderDetails.orderDate.toISOString().split("T")[0].split("-").reverse().join("-") %>
                    <br>
                      <% if (orders[i].couponDiscount) { %>
                        Coupon Discount: ₹<%= orders[i].couponDiscount %>
                      <% } %>                    
                </td>
                <td class="py-2 px-4 border-b cursor-pointer"
                  onclick="location.href = '/orderinformation/<%= orders[i].orderDetails._id %>'">
                  Quantity: <%= orders[i].orderDetails.quantity %>
                </td>
                <td class="py-2 px-4 border-b cursor-pointer"
                onclick="location.href = '/orderinformation/<%= orders[i].orderDetails._id %>'">
                Product Price: ₹ <%= Math.round(orders[i].orderDetails.price) %>
            </td>
                <td class="py-2 px-4 border-b cursor-pointer"
                  onclick="location.href = '/orderinformation/<%= orders[i].orderDetails._id %>'">
                  <span class="bg-green-500 text-white py-1 px-2 rounded">
                    <%= orders[i].orderDetails.orderStatus %>
                  </span>
                </td>
                <% if ((orders[i].orderDetails.orderStatus==='Ordered' ) ||
                  (orders[i].orderDetails.orderStatus==='Shipped' ) ) { %>
                  <td class="py-2 px-4 border-b">
                    <button class="bg-red-500 text-white py-1 px-2 rounded" onclick="openCancelModal()">Cancel</button>
                  </td>
                  <div class="fixed z-50 inset-0 overflow-y-auto hidden" id="cancelModalBackdrop">
                    <div class="flex items-center justify-center min-h-screen">
                      <div class="bg-white rounded-lg shadow-xl p-4 mx-4 sm:max-w-lg sm:w-full">
                        <div class="mb-4">
                          <h2 class="text-lg font-semibold">
                            Enter Reason for Cancelling
                          </h2>
                        </div>

                        <div>
                          <textarea class="w-full border rounded-md p-2" rows="4"
                            placeholder="Enter reason for cancellation..."></textarea>
                        </div>

                        <div class="mt-4 flex justify-end">
                          <button class="bg-gray-300 text-gray-700 px-4 py-2 rounded-md mr-2"
                            onclick="closeCancelModal()">
                            Close
                          </button>
                          <button class="bg-blue-500 text-white px-4 py-2 rounded-md"
                            onclick="cancelOrder('<%= orders[i].orderDetails._id %>')">
                            Submit
                          </button>
                        </div>
                      </div>
                    </div>
                  </div>
                  <% } else if (orders[i].orderDetails.orderStatus==='Delivered' ) { %>
                    <td>
                      <button class=" py-2 px-4 " onclick="downloadInvoice('<%= orders[i]._id %>')"><i class="fa-solid fa-download"></i><p>Invoice</p></button>
                      </td>
                    <td class="py-2 px-4 border-b">
                      
                      <button class="bg-red-500 text-white py-1 px-2 rounded"
                        onclick="openReturnModal()">Return</button>
                    </td>
                    <div class="fixed z-50 inset-0 overflow-y-auto hidden" id="returnModalBackdrop">
                      <div class="flex items-center justify-center min-h-screen">
                        <div class="bg-white rounded-lg shadow-xl p-4 mx-4 sm:max-w-lg sm:w-full">
                          <div class="mb-4">
                            <h2 class="text-lg font-semibold">
                              Enter Reason for Returning
                            </h2>
                          </div>

                          <div>
                            <textarea class="w-full border rounded-md p-2" rows="4"
                              placeholder="Enter reason for return..."></textarea>
                          </div>

                          <div class="mt-4 flex justify-end">
                            <button class="bg-gray-300 text-gray-700 px-4 py-2 rounded-md mr-2"
                              onclick="closeReturnModal()">
                              Close
                            </button>
                            <button class="bg-blue-500 text-white px-4 py-2 rounded-md"
                              onclick="returnOrder('<%= orders[i].orderDetails._id %>')">
                              Submit
                            </button>
                          </div>
                        </div>
                      </div>
                    </div>
                    <% } %>
              </tr>
              <% } %>
          </tbody>
        </table>
      </div>
    </div>
  </div>




  <script src="https://unpkg.com/easyinvoice/dist/easyinvoice.min.js"></script>
    <script src="https://cdn.tailwindcss.com"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/axios/1.6.7/axios.min.js"
      integrity="sha512-NQfB/bDaB8kaSXF8E77JjhHG5PM6XVRxvHzkZiwl3ddWCEPBa23T76MuWSwAJdMGJnmQqM0VeY9kFszsrBEFrQ=="
      crossorigin="anonymous" referrerpolicy="no-referrer"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.2/css/all.min.css" integrity="sha512-SnH5WK+bZxgPHs44uWIX+LLJAJ9/2PkPKZ5QiAj6Ta86w+fsb2TkcmfRyVX3pBnMFcV7oQPJkl9QevSCWr3W6A==" crossorigin="anonymous" referrerpolicy="no-referrer" />

<script>
  function downloadInvoice(id) {
            const Orderid = id;
            console.log('kk', Orderid);

            // Show loading spinner
            // const spinner = new Spinner().spin(document.getElementById('loading-container'));

            $.ajax({
                url: `/downloadInvoice?id=${Orderid}`, // Corrected the URL and added backticks for string interpolation
                type: 'GET', // Changed the request type to GET assuming you want to retrieve the invoice
                success: function (response) {
                    console.log('hiiii', response);
                    showInvoice(response);
                },
                error: function (xhr, status, error) {
                    console.error('Request failed:', status, error);
                },
                complete: function () {
                    // Hide loading spinner when the request is complete
                    spinner.stop();
                }
            });
        }




        function showInvoice(values) {
            var data = {
                // If not using the free version, set your API key
                // "apiKey": "123abc", // Get apiKey through: https://app.budgetinvoice.com/register

                // Customize enables you to provide your own templates
                // Please review the documentation for instructions and examples
                "customize": {
                    //  "template": fs.readFileSync('template.html', 'base64') // Must be base64 encoded html 
                },
                "images": {
                    // The logo on top of your invoice
                    "logo": "https://public.budgetinvoice.com/img/logo_en_original.png",
                    // The invoice background
                    "background": "https://public.budgetinvoice.com/img/watermark-draft.jpg"
                },
                // Your own data
                "sender": {
                    "company": "NovaNex",
                    "address": "78b, NovaNex, Electronic City",
                    "zip": "560100",
                    "city": "Bangalore",
                    "country": "India"
                    //"custom1": "custom value 1",
                    //"custom2": "custom value 2",
                    //"custom3": "custom value 3"
                },
                // Your recipient
                "client": {
                    "company": 'samanway',
                    "address": 'Pathayakunnu',
                    "zip": "670691",
                    "city": "Kannur",
                    "country": "India"
                    // "custom1": "custom value 1",
                    // "custom2": "custom value 2",
                    // "custom3": "custom value 3"
                },
                "information": {
                    // Invoice number
                    "number": "2021.0001",
                    // Invoice data
                    "date": "12-12-2021",
                    // Invoice due date
                    "due-date": "31-12-2021"
                },
                // The products you would like to see on your invoice
                // Total values are being calculated automatically
                "products": values.products,
                //  [
                //     {
                //         "quantity": 2,
                //         "description": "Product 1",
                //         "Coupe discount": 6,
                //         "price": 33.87
                //     },
                //     {
                //         "quantity": 4.1,
                //         "description": "Product 2",
                //         "tax-rate": 6,
                //         "price": 12.34
                //     },
                //     {
                //         "quantity": 4.5678,
                //         "description": "Product 3",
                //         "tax-rate": 21,
                //         "price": 6324.453456
                //     }
                // ],
                // The message you would like to display on the bottom of your invoice

                "bottom-notice": "Kindly pay your invoice within 15 days.",
                // Settings to customize your invoice
                "settings": {
                    "currency": "INR", // See documentation 'Locales and Currency' for more info. Leave empty for no currency.
                    // "locale": "nl-NL", // Defaults to en-US, used for number formatting (See documentation 'Locales and Currency')        
                    // "margin-top": 25, // Defaults to '25'
                    // "margin-right": 25, // Defaults to '25'
                    // "margin-left": 25, // Defaults to '25'
                    // "margin-bottom": 25, // Defaults to '25'
                    // "format": "A4", // Defaults to A4, options: A3, A4, A5, Legal, Letter, Tabloid
                    // "height": "1000px", // allowed units: mm, cm, in, px
                    // "width": "500px", // allowed units: mm, cm, in, px
                    // "orientation": "landscape", // portrait or landscape, defaults to portrait
                },
                // Translate your invoice to your preferred language
                "translate": {
                    // "invoice": "FACTUUR",  // Default to 'INVOICE'
                    // "number": "Nummer", // Defaults to 'Number'
                    // "date": "Datum", // Default to 'Date'
                    // "due-date": "Verloopdatum", // Defaults to 'Due Date'
                    // "subtotal": "Subtotaal", // Defaults to 'Subtotal'
                    // "products": "Producten", // Defaults to 'Products'
                    // "quantity": "Aantal", // Default to 'Quantity'
                    // "price": "Prijs", // Defaults to 'Price'
                    // "product-total": "Totaal", // Defaults to 'Total'
                    // "total": "Totaal", // Defaults to 'Total'
                    // "vat": "btw" // Defaults to 'vat'
                },
            };

            //Create your invoice! Easy!
            easyinvoice.createInvoice(data, function (result) {
                //The response will contain a base64 encoded PDF file
                console.log('PDF base64 string: ', result.pdf);

                easyinvoice.download('invoice.pdf')
            });

        }
  </script>






    <script>
     async function goBack() {
        window.history.back();
      }

      function cancelOrder(orderId) {
        console.log('asdfghjk');
        axios
          .post("/cancelOrder", { orderId })
          .then((data) => {
            if (data) {
              Swal.fire("Order Cancelled", "Click the button", "success").then(
                () => {
                  window.location.reload();
                }
              );
            }
            console.log("cancelled");
          })
          .catch((error) => {
            console.error("Error cancelling order:", error);
          });
      }

      function returnOrder(orderId) {
        axios
          .post("/returnOrder", { orderId })
          .then((data) => {
            if (data) {
              Swal.fire("Order Returned", "Click the button", "success").then(
                () => {
                  window.location.reload();
                }
              );
            }
          })
          .catch((error) => {
            console.error("Error returning order:", error);
          });
      }

      function openCancelModal() {
        document
          .getElementById("cancelModalBackdrop")
          .classList.remove("hidden");
        document.body.classList.add("overflow-hidden");
      }

      function closeCancelModal() {
        document.getElementById("cancelModalBackdrop").classList.add("hidden");
        document.body.classList.remove("overflow-hidden");
      }

      function openReturnModal() {
        document
          .getElementById("returnModalBackdrop")
          .classList.remove("hidden");
        document.body.classList.add("overflow-hidden");
      }

      function closeReturnModal() {
        document.getElementById("returnModalBackdrop").classList.add("hidden");
        document.body.classList.remove("overflow-hidden");
      }

      //  function submitCancellation() {
        // Add your cancellation submission logic here
        // For example, you can retrieve the reason entered in the textarea and send it to the server
        // Then, close the modal
        // closeModal();
      // }
    </script>

    
      <%- include('include/_footer') %>
